'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
'
Namespace WSclaro
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="SWPushPortSoapBinding", [Namespace]:="http://www.bea.com/SWPush/SWPush")>  _
    Partial Public Class SWPush
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ConfigurarAppClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RecibirMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerConsultaTicketOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsWorkingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CambiarContrasenaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.INTEGRACION.My.MySettings.Default.INTEGRACION_pe_com_claro_services_SWPush
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ConfigurarAppClienteCompleted As ConfigurarAppClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event RecibirMensajesCompleted As RecibirMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerConsultaTicketCompleted As ObtenerConsultaTicketCompletedEventHandler
        
        '''<remarks/>
        Public Event IsWorkingCompleted As IsWorkingCompletedEventHandler
        
        '''<remarks/>
        Public Event CambiarContrasenaCompleted As CambiarContrasenaCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://www.bea.com/SWPush/SWPush", ResponseNamespace:="http://www.bea.com/SWPush/SWPush")>  _
        Public Function ConfigurarAppCliente(ByVal [string] As String, ByVal string0 As String) As <System.Xml.Serialization.SoapElementAttribute("result")> String
            Dim results() As Object = Me.Invoke("ConfigurarAppCliente", New Object() {[string], string0})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConfigurarAppClienteAsync(ByVal [string] As String, ByVal string0 As String)
            Me.ConfigurarAppClienteAsync([string], string0, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConfigurarAppClienteAsync(ByVal [string] As String, ByVal string0 As String, ByVal userState As Object)
            If (Me.ConfigurarAppClienteOperationCompleted Is Nothing) Then
                Me.ConfigurarAppClienteOperationCompleted = AddressOf Me.OnConfigurarAppClienteOperationCompleted
            End If
            Me.InvokeAsync("ConfigurarAppCliente", New Object() {[string], string0}, Me.ConfigurarAppClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnConfigurarAppClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConfigurarAppClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConfigurarAppClienteCompleted(Me, New ConfigurarAppClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://www.bea.com/SWPush/SWPush", ResponseNamespace:="http://www.bea.com/SWPush/SWPush")>  _
        Public Function RecibirMensajes(ByVal [string] As String, ByVal string0 As String, ByVal string1 As String, ByVal [date] As Date, ByVal byteVal As SByte) As <System.Xml.Serialization.SoapElementAttribute("result")> String
            Dim results() As Object = Me.Invoke("RecibirMensajes", New Object() {[string], string0, string1, [date], byteVal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RecibirMensajesAsync(ByVal [string] As String, ByVal string0 As String, ByVal string1 As String, ByVal [date] As Date, ByVal byteVal As SByte)
            Me.RecibirMensajesAsync([string], string0, string1, [date], byteVal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RecibirMensajesAsync(ByVal [string] As String, ByVal string0 As String, ByVal string1 As String, ByVal [date] As Date, ByVal byteVal As SByte, ByVal userState As Object)
            If (Me.RecibirMensajesOperationCompleted Is Nothing) Then
                Me.RecibirMensajesOperationCompleted = AddressOf Me.OnRecibirMensajesOperationCompleted
            End If
            Me.InvokeAsync("RecibirMensajes", New Object() {[string], string0, string1, [date], byteVal}, Me.RecibirMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnRecibirMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.RecibirMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RecibirMensajesCompleted(Me, New RecibirMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://www.bea.com/SWPush/SWPush", ResponseNamespace:="http://www.bea.com/SWPush/SWPush")>  _
        Public Function ObtenerConsultaTicket(ByVal [string] As String, ByVal string0 As String, ByVal intVal As Integer) As <System.Xml.Serialization.SoapElementAttribute("result")> String
            Dim results() As Object = Me.Invoke("ObtenerConsultaTicket", New Object() {[string], string0, intVal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerConsultaTicketAsync(ByVal [string] As String, ByVal string0 As String, ByVal intVal As Integer)
            Me.ObtenerConsultaTicketAsync([string], string0, intVal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerConsultaTicketAsync(ByVal [string] As String, ByVal string0 As String, ByVal intVal As Integer, ByVal userState As Object)
            If (Me.ObtenerConsultaTicketOperationCompleted Is Nothing) Then
                Me.ObtenerConsultaTicketOperationCompleted = AddressOf Me.OnObtenerConsultaTicketOperationCompleted
            End If
            Me.InvokeAsync("ObtenerConsultaTicket", New Object() {[string], string0, intVal}, Me.ObtenerConsultaTicketOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerConsultaTicketOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerConsultaTicketCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerConsultaTicketCompleted(Me, New ObtenerConsultaTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://www.bea.com/SWPush/SWPush", ResponseNamespace:="http://www.bea.com/SWPush/SWPush")>  _
        Public Function IsWorking() As <System.Xml.Serialization.SoapElementAttribute("result")> Boolean
            Dim results() As Object = Me.Invoke("IsWorking", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsWorkingAsync()
            Me.IsWorkingAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsWorkingAsync(ByVal userState As Object)
            If (Me.IsWorkingOperationCompleted Is Nothing) Then
                Me.IsWorkingOperationCompleted = AddressOf Me.OnIsWorkingOperationCompleted
            End If
            Me.InvokeAsync("IsWorking", New Object(-1) {}, Me.IsWorkingOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsWorkingOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsWorkingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsWorkingCompleted(Me, New IsWorkingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://www.bea.com/SWPush/SWPush", ResponseNamespace:="http://www.bea.com/SWPush/SWPush")>  _
        Public Function CambiarContrasena(ByVal [string] As String, ByVal string0 As String, ByVal string1 As String) As <System.Xml.Serialization.SoapElementAttribute("result")> Boolean
            Dim results() As Object = Me.Invoke("CambiarContrasena", New Object() {[string], string0, string1})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CambiarContrasenaAsync(ByVal [string] As String, ByVal string0 As String, ByVal string1 As String)
            Me.CambiarContrasenaAsync([string], string0, string1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CambiarContrasenaAsync(ByVal [string] As String, ByVal string0 As String, ByVal string1 As String, ByVal userState As Object)
            If (Me.CambiarContrasenaOperationCompleted Is Nothing) Then
                Me.CambiarContrasenaOperationCompleted = AddressOf Me.OnCambiarContrasenaOperationCompleted
            End If
            Me.InvokeAsync("CambiarContrasena", New Object() {[string], string0, string1}, Me.CambiarContrasenaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCambiarContrasenaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CambiarContrasenaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CambiarContrasenaCompleted(Me, New CambiarContrasenaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ConfigurarAppClienteCompletedEventHandler(ByVal sender As Object, ByVal e As ConfigurarAppClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConfigurarAppClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RecibirMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As RecibirMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RecibirMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ObtenerConsultaTicketCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerConsultaTicketCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerConsultaTicketCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub IsWorkingCompletedEventHandler(ByVal sender As Object, ByVal e As IsWorkingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsWorkingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CambiarContrasenaCompletedEventHandler(ByVal sender As Object, ByVal e As CambiarContrasenaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CambiarContrasenaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
End Namespace
